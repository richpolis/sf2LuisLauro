<?php

namespace Richpolis\CategoriasGaleriaBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * GaleriasRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GaleriasRepository extends EntityRepository
{
    
    public function getMaxPosicion($tipo_categoria=0){
        $em=$this->getEntityManager();
        if($tipo_categoria==0){
        $query=$em->createQuery('
            SELECT MAX(g.posicion) as value 
            FROM CategoriasGaleriaBundle:Galerias g 
            ORDER BY g.posicion ASC
            ');
        }else{
        $query=$em->createQuery('
            SELECT MAX(g.posicion) as value 
            FROM CategoriasGaleriaBundle:Galerias g 
            WHERE g.tipoCategoria=:tipo 
            ORDER BY g.posicion ASC
            ')->setParameter('tipo', $tipo_categoria);
        }
        $max=$query->getResult();
        return $max[0]['value'];
    }
    
    public function getRegistroPorIdConCategoria($id){
        $em=$this->getEntityManager();
        $query=$em->createQuery('
            SELECT g  
            FROM CategoriasGaleriaBundle:Galerias g 
            LEFT JOIN g.categoria c 
            WHERE g.id=:id
            ')->setParameters(array('id'=>$id));
        return $query->getSingleResult();
    }
    
    public function getQueryGaleriaPorCategoriaYStatus($categoria,$active){
        $em=$this->getEntityManager();
        $query=$em->createQuery('
            SELECT g   
            FROM CategoriasGaleriaBundle:Galerias g 
            WHERE g.isActive=:active 
            AND g.categoria=:categoria 
            ORDER BY g.posicion ASC
            ')->setParameters(array('categoria'=>$categoria,'active'=>$active));
        return $query;
    }
    
    public function getGaleriaPorCategoriaYStatus($categoria,$active){
        $query=$this->getQueryGaleriaPorCategoriaYStatus($categoria, $active);
        return $query->getResult();
    }
    
    public function getQueryGaleriaPorTipoCategoria($tipo,$todas=false){
        $query=$this->getEntityManager()->createQueryBuilder();
               $query->select('g,c')
                    ->from('Richpolis\CategoriasGaleriaBundle\Entity\Galerias', 'g')
                    ->leftJoin('g.categoria', 'c') 
                    ->where('c.tipoCategoria=:tipo')
                    ->setParameter('tipo', $tipo)
                    ->orderBy('g.posicion', 'ASC'); 
        if(!$todas){
            $query->andWhere('g.isActive=:active')
                  ->setParameter('active', true);
        }
        return $query->getQuery();
    }
    
    public function getGaleriaPorTipoCategoria($tipo,$todas=false){
        $query=$this->getQueryGaleriaPorTipoCategoria($tipo, $todas=false);
        return $query->getResult();
    }
    
    public function getGaleriaPorCategoriaSlug($slug){
        $query=$this->getEntityManager()->createQueryBuilder();
               $query->select('g,c')
                    ->from('Richpolis\CategoriasGaleriaBundle\Entity\Galerias', 'g')
                    ->leftJoin('g.categoria', 'c') 
                    ->where('c.slug=:slug')
                    ->setParameter('slug', $slug)
                    ->orderBy('g.posicion', 'ASC'); 
        return $query->getQuery()->getResult();
    }
}