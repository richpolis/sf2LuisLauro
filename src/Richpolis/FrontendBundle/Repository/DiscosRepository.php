<?php

namespace Richpolis\FrontendBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * DiscosRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DiscosRepository extends EntityRepository
{
    public function getMaxPosicion($tipo=0){
        $em=$this->getEntityManager();
        if($tipo==0){
            $query=$em->createQuery('
                SELECT MAX(d.posicion) as value 
                FROM FrontendBundle:Discos d 
                ORDER BY d.posicion DESC
            ');
        }else{
            $query=$em->createQuery('
                SELECT MAX(d.posicion) as value 
                FROM FrontendBundle:Discos d 
                WHERE d.tipoCategoria=:tipo 
                ORDER BY d.posicion DESC
            ')->setParameter('tipo', $tipo);
        }
        $query->setMaxResults(1);
        $max=$query->getResult();
        return $max[0]['value'];
    }
    
    
    public function getQueryDiscosActivas($todas=false){
		$query=$this->createQueryBuilder('d')
                    ->orderBy('d.posicion', 'ASC');
        if(!$todas){
            $query->andWhere('d.isActive=:active')
                  ->setParameter('active', true);
        }

        return $query->getQuery();
    }
    
    public function getDiscosActivas($todas=false){
        $query=$this->getQueryDiscosActivas($todas);
        return $query->getResult();
    }
    
    public function getDiscoYTracksPorSlug($slug){
        $query=$this->getEntityManager()->createQueryBuilder();
                $query->select('d,t')
                    ->from('Richpolis\FrontendBundle\Entity\Discos', 'd')
                    ->leftJoin('d.tracks', 't')
                    ->where('d.slug=:slug')
                    ->setParameter('slug', $slug)
                ;
        return $query->getQuery()->getOneOrNullResult();
    }
    
    public function getDiscosAndTracks(){
        $query=$this->getEntityManager()->createQueryBuilder();
                $query->select('d,t')
                    ->from('Richpolis\FrontendBundle\Entity\Discos', 'd')
                    ->leftJoin('d.tracks', 't')
                    ->orderBy('d.posicion','ASC')
                    ->addOrderBy('t.posicion','ASC')
                ;
        return $query->getQuery()->getResult();
    }

    public function getRegistroUpOrDown(\Richpolis\FrontendBundle\Entity\Discos $disco,$up=true){
        // $up = true, $up = false is down
        if($up){
            //up
            $query=$this->createQueryBuilder('p')
                    ->where('p.posicion<:posicion')
                    ->setParameter('posicion', $disco->getPosicion())
                    ->orderBy('p.posicion', 'DESC');
        }else{
            //down
            $query=$this->createQueryBuilder('p')
                    ->where('p.posicion>:posicion')
                    ->setParameter('posicion', $disco->getPosicion())
                    ->orderBy('p.posicion', 'ASC');
        }
        
        return $query->getQuery()->setMaxResults(1)->getOneOrNullResult();
    }
}
